[gd_scene load_steps=3 format=2]

[ext_resource path="res://scn/icon.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends ScrollContainer

signal icon_opened(file)

export (PackedScene) var Icon

onready var icon_container := $GridContainer

### Removes all icons currently displayed.
func clear() -> void:
	get_tree().call_group('Icons', 'queue_free')

### We resize the icon container so that it has as many icons
### as it can fit horizontally.
func _resize_icon_container() -> void:
	if icon_container.get_child_count() > 0:
		var icon_size: Vector2 = icon_container.get_child(0).rect_size
		
		if icon_container.rect_size.x + icon_size.x <= rect_size.x:
			icon_container.columns += 1
		elif icon_container.rect_size.x > rect_size.x:
			icon_container.columns -= 1

func _on_GridContainer_sort_children() -> void:
	_resize_icon_container()

### Updates display with the current directory's files.
func _on_directory_changed(directory: Directory) -> void:
	var file := ''
	
	clear()
	
	directory.list_dir_begin(true, true)
	file = directory.get_next()
	while '' != file:
		var icon = Icon.instance()
		
		if directory.current_is_dir():
			icon.is_directory = true
		icon.set_file_path(file)
		icon.connect('opened', self, '_on_icon_opened')
		icon.add_to_group('Icons')
		icon_container.add_child(icon)
		
		file = directory.get_next()

func _on_icon_opened(icon) -> void:
	emit_signal('icon_opened', icon)
"

[node name="IconContainer" type="ScrollContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 1 )
Icon = ExtResource( 1 )

[node name="GridContainer" type="GridContainer" parent="."]

[connection signal="sort_children" from="GridContainer" to="." method="_on_GridContainer_sort_children"]
