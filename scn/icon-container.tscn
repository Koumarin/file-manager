[gd_scene load_steps=3 format=2]

[ext_resource path="res://scn/icon.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends ScrollContainer

signal icon_opened(file)
signal icon_selected(icon)

export (PackedScene) var Icon

var _selection = null

var _path        := '/'
var _skip_hidden := true

onready var icon_container := $GridContainer

func _unhandled_input(event: InputEvent) -> void:
	if event.is_action_released('toggle-hidden'):
		_skip_hidden = not _skip_hidden
		update_icons()

func update_icons() -> void:
	var file := ''
	var dir  := Directory.new()
	
	_deselect_current()
	clear()
	
	dir.open(_path)
	dir.list_dir_begin(true, _skip_hidden)
	file = dir.get_next()
	while '' != file:
		var is_dir := dir.current_is_dir()
		
		_create_icon(file, is_dir)
		file = dir.get_next()

### Removes all icons currently displayed.
func clear() -> void:
	get_tree().call_group('Icons', 'queue_free')

### We resize the icon container so that it has as many icons
### as it can fit horizontally.
func _resize_icon_container() -> void:
	if icon_container.get_child_count() > 0:
		var icon_size: Vector2 = icon_container.get_child(0).rect_size
		
		if icon_container.rect_size.x + icon_size.x <= rect_size.x:
			icon_container.columns += 1
		elif icon_container.rect_size.x > rect_size.x:
			icon_container.columns -= 1

func _on_GridContainer_sort_children() -> void:
	_resize_icon_container()

### Updates display with the current directory's files.
func _on_directory_changed(dir: Directory) -> void:
	_path = dir.get_current_dir()
	update_icons()

func _create_icon(file: String, is_dir: bool) -> void:
	var icon = Icon.instance()
	
	if is_dir:
		icon.is_directory = true
	
	icon.set_file_path(file)
	icon.connect('opened',   self, '_on_icon_opened')
	icon.connect('selected', self, '_on_icon_selected')
	icon.add_to_group('Icons')
	icon_container.add_child(icon)

func _on_icon_opened(icon) -> void:
	emit_signal('icon_opened', icon)

func _on_icon_selected(icon) -> void:
	if _selection != icon:
		_deselect_current()
		_selection = icon
		emit_signal('icon_selected', icon)

func _deselect_current() -> void:
	if _selection:
		_selection.deselect()
		_selection = null
"

[node name="IconContainer" type="ScrollContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 1 )
Icon = ExtResource( 1 )

[node name="GridContainer" type="GridContainer" parent="."]

[connection signal="sort_children" from="GridContainer" to="." method="_on_GridContainer_sort_children"]
