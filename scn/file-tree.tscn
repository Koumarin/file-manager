[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Tree

signal directory_selected(path)

var directory := Directory.new()

func _ready() -> void:
	var item: TreeItem
	
	connect('item_activated', self, '_on_item_activated')
	
	set_hide_root(true)
	item = create_item()
	item.set_text(0, 'Filesystem')
	item.set_selectable(0, false)
	
	for i in range(directory.get_drive_count()):
		var path := get_drive(i)
		var subdirs: Array
		
		item = create_item()
		item.set_text(0, Util.translate_path_name(path))
		item.set_metadata(0, path)
		item.collapsed = true
		
		subdirs = Util.get_subdirectories(path)
		for dir in subdirs:
			var subitem := create_item(item)
			
			subitem.set_text(0, Util.translate_path_name(dir))
			subitem.set_metadata(0, dir)
			subitem.collapsed = true

func get_drive(idx: int) -> String:
	var path := directory.get_drive(idx)
	
	match OS.get_name():
		'Windows': return path + '/'
		_:         return path

func cascade_tree(item: TreeItem) -> String:
	return ('' if not item.get_metadata(0)
			else cascade_tree(item.get_parent()) + item.get_metadata(0))

func _on_item_activated() -> void:
	var selected_node = get_selected()
	
	if null == selected_node:
		return
	emit_signal('directory_selected', cascade_tree(selected_node))
"

[node name="FileTree" type="Tree"]
margin_right = 253.0
margin_bottom = 600.0
mouse_filter = 1
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
