[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Tree

signal directory_selected(path)

var directory := Directory.new()

func _ready() -> void:
	var item: TreeItem
	
	connect('item_activated', self, '_on_item_activated')
	
	set_hide_root(true)
	item = create_item()
	item.set_text(0, 'Filesystem')
	item.set_selectable(0, false)
	
	for i in range(directory.get_drive_count()):
		var path := directory.get_drive(i)
		var subdirs: Array
		
		item = create_item()
		item.set_text(0, translate_path_name(path))
		item.set_metadata(0, path)
		item.collapsed = true
		
		subdirs = get_subdirectories(path)
		for dir in subdirs:
			var subitem := create_item(item)
			
			subitem.set_text(0, translate_path_name(dir))
			subitem.set_metadata(0, dir)
			subitem.collapsed = true

func get_subdirectories(path: String) -> Array:
	var lst  := []
	var dir  := Directory.new()
	var file := ''
	
	dir.open(path)
	dir.list_dir_begin(true, true)
	file = dir.get_next()
	while '' != file:
		if dir.current_is_dir():
			lst.append(file)
		file = dir.get_next()
	return lst

func translate_path_name(path: String) -> String:
	var username := get_username()
	var home     := '/home/' + username
	match path:
		'/':  return 'Root'
		home: return 'Home'
		_:    return strip_path(path)

func get_username() -> String:
	if OS.has_environment('USER'):
		return OS.get_environment('USER')
	else:
		return ''

func strip_path(path: String) -> String:
	return path.right(path.rfind('/') + 1)

func cascade_tree(item: TreeItem) -> String:
	if not item.get_metadata(0):
		return ''
	else:
		return cascade_tree(item.get_parent()) + '/' + item.get_metadata(0)

func _on_item_activated() -> void:
	var selected_node = get_selected()
	var path = selected_node.get_metadata(0) + '/'
	
	if null == selected_node:
		return
	emit_signal('directory_selected', cascade_tree(selected_node))
"

[node name="FileTree" type="Tree"]
margin_right = 253.0
margin_bottom = 600.0
mouse_filter = 1
size_flags_horizontal = 3
size_flags_vertical = 3
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
